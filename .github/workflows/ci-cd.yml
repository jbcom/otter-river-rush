name: CI/CD

on:
  push:
    branches: [ main, develop ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      deploy_web:
        description: 'Deploy to GitHub Pages'
        required: false
        type: boolean
        default: true

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # ============================================================================
  # CI JOBS - Run on all pushes and PRs
  # ============================================================================
  
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v5
      
      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run ESLint
        run: npm run lint
      
      - name: Check formatting
        run: npm run format -- --check

  type-check:
    name: Type Check
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v5
      
      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run TypeScript compiler
        run: npm run type-check

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v5
      
      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run unit tests
        run: npm test -- --run
      
      - name: Upload coverage reports
        uses: codecov/codecov-action@v5
        if: github.event_name == 'push'
        with:
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  build-web:
    name: Build Web
    runs-on: ubuntu-latest
    needs: [lint, type-check, test]
    
    steps:
      - uses: actions/checkout@v5
      
      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build project
        run: npm run build
        env:
          NODE_ENV: production
      
      - name: Report bundle size
        run: |
          BUNDLE_SIZE=$(du -sb dist | cut -f1)
          BUNDLE_MB=$(echo "scale=2; $BUNDLE_SIZE / 1024 / 1024" | bc)
          echo "Bundle size: $BUNDLE_SIZE bytes (${BUNDLE_MB}MB)"
          echo "âœ… Bundle built successfully"
          # No artificial limit - this is a game with assets, not a landing page
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 30

  # ============================================================================
  # EXTENDED TESTING - Run on main branch pushes only
  # ============================================================================

  e2e:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: build-web
    timeout-minutes: 15
    if: |
      (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
      (github.event_name == 'workflow_dispatch')
    
    steps:
      - uses: actions/checkout@v5
      
      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
      
      - name: Run Playwright tests
        run: npm run test:e2e
      
      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7

  visual-tests:
    name: Visual Regression Tests
    runs-on: ubuntu-latest
    needs: build-web
    timeout-minutes: 20
    if: |
      (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
      (github.event_name == 'workflow_dispatch')
    permissions:
      contents: read
    
    steps:
      - uses: actions/checkout@v5
      
      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
      
      - name: Run visual regression tests
        run: npm run test:visual
      
      - name: Upload visual test results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: visual-test-results
          path: |
            test-results/
            playwright-report/
          retention-days: 7

  # ============================================================================
  # DEPLOYMENT - Deploy to GitHub Pages on main pushes
  # ============================================================================

  deploy-web:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: [build-web, e2e]
    # Deploy even if e2e fails (non-blocking)
    if: |
      always() &&
      needs.build-web.result == 'success' &&
      ((github.event_name == 'push' && github.ref == 'refs/heads/main') ||
       (github.event_name == 'workflow_dispatch' && inputs.deploy_web))
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
      
      - name: Setup Pages
        uses: actions/configure-pages@v5
      
      - name: Upload artifact to Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist/
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # ============================================================================
  # AUTOMATED RELEASE - Create version tags and changelogs on main pushes
  # ============================================================================

  auto-release:
    name: Automated Release
    runs-on: ubuntu-latest
    needs: [build-web, deploy-web]
    # Run after deploy, regardless of e2e/visual test results
    if: |
      always() &&
      needs.build-web.result == 'success' &&
      needs.deploy-web.result == 'success' &&
      github.event_name == 'push' &&
      github.ref == 'refs/heads/main'
    permissions:
      contents: write
      issues: write
      pull-requests: write
      actions: write  # Required to trigger platform-builds workflow
    
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          persist-credentials: true
      
      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Semantic Release
        id: semantic
        uses: cycjimmy/semantic-release-action@v4
        with:
          semantic_version: 24
          extra_plugins: |
            @semantic-release/changelog@6
            @semantic-release/git@10
            conventional-changelog-conventionalcommits@8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Create GitHub Release if new version
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.semantic.outputs.new_release_version }}
          name: v${{ steps.semantic.outputs.new_release_version }}
          body: ${{ steps.semantic.outputs.new_release_notes }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Trigger platform builds if new release
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const version = 'v${{ steps.semantic.outputs.new_release_version }}';
            console.log(`Triggering platform builds for ${version}`);
            
            try {
              await github.rest.actions.createWorkflowDispatch({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: 'platform-builds.yml',
                ref: 'main',
                inputs: {
                  version: version
                }
              });
              console.log('Platform builds workflow triggered successfully');
            } catch (error) {
              console.error('Failed to trigger platform builds:', error);
              // Don't fail the job if this fails
            }

  # Platform builds are now handled by platform-builds.yml workflow
  # which is triggered automatically by auto-release job above

