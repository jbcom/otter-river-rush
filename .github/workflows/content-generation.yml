name: Content Generation

on:
  # Run before main deployments
  workflow_call:
    outputs:
      content_generated:
        description: 'Whether new content was generated'
        value: ${{ jobs.generate.outputs.generated }}
  
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      regenerate_all:
        description: 'Force regenerate all assets'
        type: boolean
        default: false
  
  # Scheduled refresh (weekly)
  schedule:
    - cron: '0 2 * * 0'  # Every Sunday at 2 AM UTC

permissions:
  contents: write

jobs:
  generate:
    name: Generate AI Content & Assets
    runs-on: ubuntu-latest
    # Only run on main branch or manual trigger to save API costs
    if: |
      github.ref == 'refs/heads/main' || 
      github.event_name == 'workflow_dispatch' ||
      github.event_name == 'schedule'
    
    outputs:
      generated: ${{ steps.check.outputs.changes }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Check API Keys Configuration
        id: check-keys
        run: |
          OPENAI_OK=false
          ANTHROPIC_OK=false
          
          if [ -n "${{ secrets.OPENAI_API_KEY }}" ]; then
            echo "✅ OPENAI_API_KEY is configured"
            OPENAI_OK=true
          else
            echo "⚠️  OPENAI_API_KEY not configured - sprite generation will be skipped"
          fi
          
          if [ -n "${{ secrets.ANTHROPIC_API_KEY }}" ]; then
            echo "✅ ANTHROPIC_API_KEY is configured"
            ANTHROPIC_OK=true
          else
            echo "⚠️  ANTHROPIC_API_KEY not configured - content generation will be skipped"
          fi
          
          echo "openai_ok=$OPENAI_OK" >> $GITHUB_OUTPUT
          echo "anthropic_ok=$ANTHROPIC_OK" >> $GITHUB_OUTPUT
      
      # ============================================================================
      # AI CONTENT GENERATION (Anthropic Claude)
      # ============================================================================
      
      - name: Generate Game Content (Claude)
        if: steps.check-keys.outputs.anthropic_ok == 'true'
        run: npm run generate-content
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        continue-on-error: true
      
      - name: Generate Level Patterns (Claude)
        if: steps.check-keys.outputs.anthropic_ok == 'true'
        run: npm run generate-level-patterns
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        continue-on-error: true
      
      # ============================================================================
      # SPRITE GENERATION (OpenAI GPT-Image)
      # ============================================================================
      
      - name: Generate Sprites (OpenAI)
        if: steps.check-keys.outputs.openai_ok == 'true'
        run: npm run generate-sprites
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        continue-on-error: true
      
      - name: Generate HUD Sprites (OpenAI)
        if: steps.check-keys.outputs.openai_ok == 'true'
        run: npm run generate-hud
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        continue-on-error: true
      
      - name: Generate UI Icons (OpenAI)
        if: steps.check-keys.outputs.openai_ok == 'true'
        run: npm run generate-ui-icons
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        continue-on-error: true
      
      - name: Generate PWA Icons (OpenAI)
        if: steps.check-keys.outputs.openai_ok == 'true'
        run: npm run generate-pwa-icons
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        continue-on-error: true
      
      # ============================================================================
      # ASSET PROCESSING (Idempotent)
      # ============================================================================
      
      - name: Run Asset Pipeline
        run: npm run asset-pipeline
        continue-on-error: true
      
      - name: Asset Quality Check
        run: npm run asset-quality
        continue-on-error: true
      
      # ============================================================================
      # COMMIT & PUSH GENERATED CONTENT
      # ============================================================================
      
      - name: Check for changes
        id: check
        run: |
          git add -A
          if git diff-index --quiet HEAD --; then
            echo "No changes to commit"
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected"
            echo "changes=true" >> $GITHUB_OUTPUT
          fi
      
      - name: Commit generated content
        if: steps.check.outputs.changes == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -m "chore: regenerate AI content and assets [skip ci]
          
          - Game content (enemies, achievements, patterns, tips)
          - Sprites (otter, obstacles, enemies, collectibles)
          - HUD and UI icons
          - PWA icons
          - Asset pipeline optimization
          
          Generated by: ${{ github.workflow }}
          Triggered by: ${{ github.event_name }}"
      
      - name: Push changes
        if: steps.check.outputs.changes == 'true'
        run: git push
        continue-on-error: true
      
      # ============================================================================
      # UPLOAD ARTIFACTS (For build job to use)
      # ============================================================================
      
      - name: Upload generated content artifacts
        uses: actions/upload-artifact@v4
        with:
          name: generated-content
          path: |
            src/game/data/
            public/sprites/
            public/hud/
            public/icons/
            public/*.png
            public/*.ico
          retention-days: 7
          if-no-files-found: warn
      
      - name: Generate summary
        run: |
          echo "## 🎨 Content Generation Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ -d "src/game/data" ]; then
            echo "### Game Data Generated:" >> $GITHUB_STEP_SUMMARY
            ls -lh src/game/data/ | tail -n +2 | awk '{print "- " $9 " (" $5 ")"}' >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ -d "public/sprites" ]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Sprites Generated:" >> $GITHUB_STEP_SUMMARY
            echo "Total: $(ls -1 public/sprites/*.png 2>/dev/null | wc -l) files" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ Content generation complete!" >> $GITHUB_STEP_SUMMARY
