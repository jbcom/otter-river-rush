name: Desktop Build

# DEPRECATED: This workflow is maintained for backward compatibility.
# New builds should use the "Build All Platforms" workflow which reuses the web build.

# Desktop platform flow: Integration tests pass → Build Electron → Manual testing

on:
  workflow_run:
    workflows: ["Integration Tests"]
    types: [completed]
    branches: [main]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag (e.g., v1.0.0) or "test"'
        required: true
        type: string
      platforms:
        description: 'Platforms (comma-separated: linux,macos,windows,all)'
        required: true
        type: choice
        options:
          - all
          - linux
          - macos
          - windows
        default: 'all'

permissions:
  contents: write

concurrency:
  group: desktop-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-desktop:
    name: Build Desktop (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    if: |
      github.event_name == 'workflow_dispatch' ||
      (github.event.workflow_run.conclusion == 'success' && 
       github.event.workflow_run.event == 'push')
    
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
          - os: macos-latest
            platform: macos
          - os: windows-latest
            platform: windows
    
    steps:
      - uses: actions/checkout@v5
      
      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '22'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build web (base for Electron)
        run: npm run build
        env:
          NODE_ENV: production
      
      - name: Build Electron app
        run: npm run electron:build
      
      - name: Rename builds
        shell: bash
        run: |
          VERSION="${{ github.event.inputs.version || 'snapshot' }}"
          TIMESTAMP=$(date +%Y%m%d-%H%M%S)
          cd dist-electron
          
          # Rename all output files
          for file in *; do
            if [ -f "$file" ]; then
              ext="${file##*.}"
              base=$(basename "$file" ".$ext")
              mv "$file" "otter-river-rush-${VERSION}-${TIMESTAMP}-${{ matrix.platform }}.$ext" 2>/dev/null || true
            fi
          done
      
      - name: Upload Linux artifacts
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v5
        with:
          name: desktop-linux-${{ github.sha }}
          path: |
            dist-electron/*.AppImage
            dist-electron/*.deb
          retention-days: 30
      
      - name: Upload macOS artifacts
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v5
        with:
          name: desktop-macos-${{ github.sha }}
          path: |
            dist-electron/*.dmg
            dist-electron/*.zip
          retention-days: 30
      
      - name: Upload Windows artifacts
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v5
        with:
          name: desktop-windows-${{ github.sha }}
          path: dist-electron/*.exe
          retention-days: 30
      
      - name: Upload to release (if version tag)
        if: github.event.inputs.version && startsWith(github.event.inputs.version, 'v')
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.version }}
          files: dist-electron/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build summary
        shell: bash
        run: |
          echo "## 🖥️ Desktop Build Complete (${{ matrix.platform }})" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Electron build from tested codebase**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "⚠️  **Manual testing required:**" >> $GITHUB_STEP_SUMMARY
          echo "1. Download artifacts for ${{ matrix.platform }}" >> $GITHUB_STEP_SUMMARY
          echo "2. Install/run on ${{ matrix.platform }} system" >> $GITHUB_STEP_SUMMARY
          echo "3. Follow testing guide: .github/PLATFORM_BUILD_TESTING.md" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Automated E2E testing for Electron is not practical." >> $GITHUB_STEP_SUMMARY
          echo "Manual testing verifies the Electron wrapper works correctly." >> $GITHUB_STEP_SUMMARY
