name: Mobile-First CI/CD

# PRIMARY WORKFLOW - Mobile is the main platform
# Web is just for testing/preview, Android APK is the production artifact

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  # Step 1: Build web bundle (base for both web and Android)
  build-web:
    name: Build Web Bundle
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
      
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Unit & Integration tests
        run: pnpm --filter client test -- --run
      
      - name: Type check
        run: pnpm --filter client type-check
      
      - name: Build
        run: pnpm build
      
      - name: Upload web dist
        uses: actions/upload-artifact@v4
        with:
          name: web-dist
          path: dist/**
          retention-days: 7

  # Step 2: E2E tests (preview server)
  e2e:
    name: E2E Tests (Chromium only)
    runs-on: ubuntu-latest
    needs: build-web
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
      
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Install Playwright
        run: npx playwright install chromium --with-deps
      
      - name: Run E2E (game-flow only, fast)
        working-directory: src/client
        run: pnpm test:e2e --project=chromium --grep="game-flow|complete-game"
      
      - name: Upload Playwright report
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: src/client/playwright-report/**
          retention-days: 7

  # Step 3: Android APK (PRIMARY ARTIFACT)
  android:
    name: Android APK (Production)
    runs-on: macos-14
    needs: e2e
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
      
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Download web dist
        uses: actions/download-artifact@v4
        with:
          name: web-dist
          path: dist
      
      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'
      
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
      
      - name: Accept licenses & install SDK
        run: |
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "platforms;android-35" "build-tools;34.0.0"
      
      - name: Capacitor sync
        run: pnpm exec cap sync android
      
      - name: Build Debug APK
        run: cd android && ./gradlew assembleDebug
      
      - name: Build Release APK (unsigned)
        run: cd android && ./gradlew assembleRelease
      
      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: android/app/build/outputs/apk/debug/*.apk
          retention-days: 30
      
      - name: Upload Release APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: android/app/build/outputs/apk/release/*.apk
          retention-days: 90

  # Step 4: Deploy web to Pages (optional preview)
  deploy-pages:
    name: Deploy Web Preview (GitHub Pages)
    runs-on: ubuntu-latest
    needs: e2e
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Download web dist
        uses: actions/download-artifact@v4
        with:
          name: web-dist
          path: dist
      
      - name: Setup Pages
        uses: actions/configure-pages@v5
      
      - name: Upload to Pages
        uses: actions/upload-pages-artifact@v4
        with:
          path: dist
      
      - name: Deploy
        id: deployment
        uses: actions/deploy-pages@v4

