name: Platform Builds

on:
  workflow_call:
    inputs:
      version:
        description: 'Version tag (e.g., v1.0.0)'
        required: true
        type: string
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag to build for (e.g., v1.0.0)'
        required: true
        type: string

permissions:
  contents: write

jobs:
  build-android:
    name: Build Android APK
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: ${{ inputs.version }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '22'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build web
        run: npm run build
        env:
          NODE_ENV: production
      
      - name: Sync Capacitor
        run: npx cap sync android
      
      - name: Setup JDK 17
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '17'
      
      - name: Build unsigned APK
        run: |
          cd android
          chmod +x ./gradlew
          ./gradlew assembleRelease
      
      - name: Rename APK
        run: |
          VERSION="${{ inputs.version }}"
          mv android/app/build/outputs/apk/release/app-release-unsigned.apk \
             android/app/build/outputs/apk/release/otter-river-rush-${VERSION}-unsigned.apk
      
      - name: Upload to Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ inputs.version }}
          files: android/app/build/outputs/apk/release/*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-desktop:
    name: Build Desktop (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        include:
          - os: macos-latest
            platform: mac
          - os: ubuntu-latest
            platform: linux
          - os: windows-latest
            platform: windows
    
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: ${{ inputs.version }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '22'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build web
        run: npm run build
        env:
          NODE_ENV: production
      
      - name: Build Electron app
        run: npm run electron:build
      
      - name: Upload macOS artifacts to Release
        if: matrix.os == 'macos-latest'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ inputs.version }}
          files: |
            dist-electron/*.dmg
            dist-electron/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Upload Linux artifacts to Release
        if: matrix.os == 'ubuntu-latest'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ inputs.version }}
          files: |
            dist-electron/*.AppImage
            dist-electron/*.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Upload Windows artifacts to Release
        if: matrix.os == 'windows-latest'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ inputs.version }}
          files: |
            dist-electron/*.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
