name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag (e.g., v1.0.0)'
        required: true
        type: string

permissions:
  contents: write

jobs:
  build-web:
    name: Build Web (Capacitor)
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      
      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build web app
        run: npm run build
        env:
          NODE_ENV: production
      
      - name: Upload web build
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: dist/
          retention-days: 7
  
  build-android:
    name: Build Android APK
    runs-on: ubuntu-latest
    needs: build-web
    
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      
      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Download web build
        uses: actions/download-artifact@v4
        with:
          name: web-build
          path: dist/
      
      - name: Sync Capacitor
        run: npx cap sync android
      
      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      
      - name: Build unsigned APK
        run: |
          cd android
          chmod +x ./gradlew
          ./gradlew assembleRelease
      
      - name: Rename APK
        run: |
          VERSION="${{ github.ref_name }}"
          if [ "$VERSION" = "refs/heads/fix/github-actions-and-releases" ]; then
            VERSION="dev"
          fi
          mv android/app/build/outputs/apk/release/app-release-unsigned.apk \
             android/app/build/outputs/apk/release/otter-river-rush-${VERSION}-unsigned.apk
      
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: android/app/build/outputs/apk/release/*.apk
          retention-days: 30
  
  build-desktop:
    name: Build Desktop (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    needs: build-web
    
    strategy:
      matrix:
        include:
          - os: macos-latest
            platform: mac
          - os: ubuntu-latest
            platform: linux
          - os: windows-latest
            platform: windows
    
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      
      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Download web build
        uses: actions/download-artifact@v4
        with:
          name: web-build
          path: dist/
      
      - name: Build Electron app
        run: npm run electron:build
      
      - name: Upload macOS artifacts
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: desktop-mac
          path: |
            dist-electron/*.dmg
            dist-electron/*.zip
          retention-days: 30
      
      - name: Upload Linux artifacts
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: desktop-linux
          path: |
            dist-electron/*.AppImage
            dist-electron/*.deb
          retention-days: 30
      
      - name: Upload Windows artifacts
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: desktop-windows
          path: |
            dist-electron/*.exe
          retention-days: 30
  
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build-web, build-android, build-desktop]
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-assets/
      
      - name: Display structure
        run: ls -R release-assets/
      
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.ref_name }}
          body: |
            ## ü¶¶ Otter River Rush ${{ github.ref_name }}
            
            ### üì¶ Downloads
            
            #### üåê Web (PWA)
            Play online: [https://jbcom.github.io/otter-river-rush/](https://jbcom.github.io/otter-river-rush/)
            
            #### üì± Mobile
            - **Android**: Download the APK below and install on your device
              - Note: This is an unsigned APK. You may need to enable "Install from Unknown Sources"
            
            #### üñ•Ô∏è Desktop
            - **Windows**: Download the `.exe` installer
            - **macOS**: Download the `.dmg` file
            - **Linux**: Download the `.AppImage` or `.deb` package
            
            ### üéÆ What's New
            See [CHANGELOG.md](https://github.com/jbcom/otter-river-rush/blob/main/CHANGELOG.md) for details.
            
            ### üêõ Known Issues
            - Android APK is unsigned (requires manual security permission)
            - First launch may take a moment to load assets
            
            ### üìñ Documentation
            - [Platform Setup Guide](https://github.com/jbcom/otter-river-rush/blob/main/PLATFORM_SETUP.md)
            - [Contributing](https://github.com/jbcom/otter-river-rush/blob/main/CONTRIBUTING.md)
          files: |
            release-assets/android-apk/*.apk
            release-assets/desktop-mac/*.dmg
            release-assets/desktop-mac/*.zip
            release-assets/desktop-linux/*.AppImage
            release-assets/desktop-linux/*.deb
            release-assets/desktop-windows/*.exe
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
