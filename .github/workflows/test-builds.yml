name: Test Builds

# This workflow builds platform binaries for TESTING without creating a release
# Use this to manually test Android/Desktop builds before actual release

on:
  workflow_dispatch:
    inputs:
      platforms:
        description: 'Platforms to build (comma-separated: android,linux,macos,windows,all)'
        required: true
        type: choice
        options:
          - all
          - android
          - linux
          - macos
          - windows
        default: 'all'
      version_suffix:
        description: 'Version suffix (e.g., test-1, pr-123)'
        required: true
        type: string
        default: 'test'

permissions:
  contents: read

concurrency:
  group: test-builds-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-android:
    name: Test Build - Android APK
    runs-on: ubuntu-latest
    if: contains(github.event.inputs.platforms, 'android') || contains(github.event.inputs.platforms, 'all')
    
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      
      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '22'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build web
        run: npm run build
        env:
          NODE_ENV: production
      
      - name: Sync Capacitor
        run: npx cap sync android
      
      - name: Setup JDK 17
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '17'
      
      - name: Build unsigned APK
        run: |
          cd android
          chmod +x ./gradlew
          ./gradlew assembleRelease
      
      - name: Rename APK
        run: |
          VERSION_SUFFIX="${{ github.event.inputs.version_suffix }}"
          TIMESTAMP=$(date +%Y%m%d-%H%M%S)
          mv android/app/build/outputs/apk/release/app-release-unsigned.apk \
             android/app/build/outputs/apk/release/otter-river-rush-${VERSION_SUFFIX}-${TIMESTAMP}-unsigned.apk
      
      - name: Upload test build
        uses: actions/upload-artifact@v5
        with:
          name: test-android-${{ github.event.inputs.version_suffix }}
          path: android/app/build/outputs/apk/release/*.apk
          retention-days: 7

  build-desktop-linux:
    name: Test Build - Linux
    runs-on: ubuntu-latest
    if: contains(github.event.inputs.platforms, 'linux') || contains(github.event.inputs.platforms, 'all')
    
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      
      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '22'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build web
        run: npm run build
        env:
          NODE_ENV: production
      
      - name: Build Electron app
        run: npm run electron:build
      
      - name: Rename builds
        run: |
          VERSION_SUFFIX="${{ github.event.inputs.version_suffix }}"
          TIMESTAMP=$(date +%Y%m%d-%H%M%S)
          cd dist-electron
          for file in *.AppImage *.deb; do
            if [ -f "$file" ]; then
              ext="${file##*.}"
              mv "$file" "otter-river-rush-${VERSION_SUFFIX}-${TIMESTAMP}.$ext"
            fi
          done
      
      - name: Upload test builds
        uses: actions/upload-artifact@v5
        with:
          name: test-linux-${{ github.event.inputs.version_suffix }}
          path: |
            dist-electron/*.AppImage
            dist-electron/*.deb
          retention-days: 7

  build-desktop-macos:
    name: Test Build - macOS
    runs-on: macos-latest
    if: contains(github.event.inputs.platforms, 'macos') || contains(github.event.inputs.platforms, 'all')
    
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      
      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '22'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build web
        run: npm run build
        env:
          NODE_ENV: production
      
      - name: Build Electron app
        run: npm run electron:build
      
      - name: Rename builds
        run: |
          VERSION_SUFFIX="${{ github.event.inputs.version_suffix }}"
          TIMESTAMP=$(date +%Y%m%d-%H%M%S)
          cd dist-electron
          for file in *.dmg *.zip; do
            if [ -f "$file" ]; then
              ext="${file##*.}"
              mv "$file" "otter-river-rush-${VERSION_SUFFIX}-${TIMESTAMP}.$ext"
            fi
          done
      
      - name: Upload test builds
        uses: actions/upload-artifact@v5
        with:
          name: test-macos-${{ github.event.inputs.version_suffix }}
          path: |
            dist-electron/*.dmg
            dist-electron/*.zip
          retention-days: 7

  build-desktop-windows:
    name: Test Build - Windows
    runs-on: windows-latest
    if: contains(github.event.inputs.platforms, 'windows') || contains(github.event.inputs.platforms, 'all')
    
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      
      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '22'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build web
        run: npm run build
        env:
          NODE_ENV: production
      
      - name: Build Electron app
        run: npm run electron:build
      
      - name: Rename builds
        shell: bash
        run: |
          VERSION_SUFFIX="${{ github.event.inputs.version_suffix }}"
          TIMESTAMP=$(date +%Y%m%d-%H%M%S)
          cd dist-electron
          for file in *.exe; do
            if [ -f "$file" ]; then
              ext="${file##*.}"
              mv "$file" "otter-river-rush-${VERSION_SUFFIX}-${TIMESTAMP}.$ext"
            fi
          done
      
      - name: Upload test builds
        uses: actions/upload-artifact@v5
        with:
          name: test-windows-${{ github.event.inputs.version_suffix }}
          path: dist-electron/*.exe
          retention-days: 7

  test-summary:
    name: Test Build Summary
    runs-on: ubuntu-latest
    needs: [build-android, build-desktop-linux, build-desktop-macos, build-desktop-windows]
    if: always()
    
    steps:
      - name: Generate summary
        run: |
          echo "## 🧪 Test Build Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Version Suffix**: ${{ github.event.inputs.version_suffix }}" >> $GITHUB_STEP_SUMMARY
          echo "**Platforms**: ${{ github.event.inputs.platforms }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📦 Build Status" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.build-android.result }}" != "skipped" ]; then
            echo "- Android: ${{ needs.build-android.result }}" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ needs.build-desktop-linux.result }}" != "skipped" ]; then
            echo "- Linux: ${{ needs.build-desktop-linux.result }}" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ needs.build-desktop-macos.result }}" != "skipped" ]; then
            echo "- macOS: ${{ needs.build-desktop-macos.result }}" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ needs.build-desktop-windows.result }}" != "skipped" ]; then
            echo "- Windows: ${{ needs.build-desktop-windows.result }}" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🧪 Next Steps" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "1. Download artifacts from this workflow run" >> $GITHUB_STEP_SUMMARY
          echo "2. Follow testing procedures in \`.github/PLATFORM_BUILD_TESTING.md\`" >> $GITHUB_STEP_SUMMARY
          echo "3. Or use quick test: \`.github/QUICK_TEST_GUIDE.md\`" >> $GITHUB_STEP_SUMMARY
          echo "4. Document results in \`.github/QUICK_TEST_GUIDE.md\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "⚠️ **These are test builds** - not for release/distribution" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Artifacts retained for 7 days" >> $GITHUB_STEP_SUMMARY
